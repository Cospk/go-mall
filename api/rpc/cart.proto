syntax = "proto3";

package cart;

option go_package = "./gen/go/cart;cart";

// protoc --go_out=./api/rpc --go-grpc_out=./api/rpc --proto_path=./api/rpc  cart.proto

service StreamGreeter {

  // 添加商品到购物车
  rpc AddCartItem(AddCartItemRequest) returns (CommonResponse) {}

  // 更新购物车商品数量
  rpc UpdateCartItem(UpdateCartItemRequest) returns (CommonResponse) {}

  // 获取用户购物车商品列表
  rpc UserCartItems(UserIdRequest) returns (CartItemsReply) {}

  // 删除购物车商品
  rpc DeleteUserCartItem(DeleteCartItemRequest) returns (CommonResponse) {}

  // 查看购物车账单（确认下单前）
  rpc CheckCartItemBill(CheckCartItemBillRequest) returns (CartItemBillReply) {}
}

// 请求和响应消息定义
message AddCartItemRequest {
  int64 user_id = 1;
  int64 commodity_id = 2;
  int32 commodity_num = 3;
}

message UpdateCartItemRequest {
  int64 user_id = 1;
  int64 item_id = 2;
  int32 commodity_num = 3;
}

message UserIdRequest {
  int64 user_id = 1;
}

message DeleteCartItemRequest {
  int64 user_id = 1;
  int64 item_id = 2;
}

message CheckCartItemBillRequest {
  int64 user_id = 1;
  repeated int64 item_ids = 2;
}

message CartItemsReply {
  repeated CartItem items = 1;
}

message CartItem {
  int64 id = 1;
  int64 user_id = 2;
  int64 commodity_id = 3;
  string commodity_num = 4;
  string commodity_name = 5;
  string commodity_img = 6;
  int64 commodity_selling_price = 7;
  string add_cart_at = 8;
}

message CartItemBillReply {
  repeated CartItemBill items = 1;
  BillSummary summary = 2;
}

message CartItemBill {
  int64 id = 1;
  int64 commodity_id = 2;
  string commodity_name = 3;
  string commodity_pic = 4;
  double price = 5;
  int32 quantity = 6;
  double subtotal = 7;
}

message BillSummary {
  double total_amount = 1;
  double freight_amount = 2;
  double promotion_amount = 3;
  double payable_amount = 4;
}

message CommonResponse {
  bool success = 1;
  string message = 2;
}